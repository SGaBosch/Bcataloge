/**************************************************************************************************\
 *** Copyright (c) Robert Bosch Automotive Steering GmbH, Germany
 *** All rights reserved
 ***
 *** Generated by: Raghul Gnanaseelan (MS/EPP10-AS)
 ***
 *** Generated with:
 *** MathWorks MATLAB                            9.9 (R2020b)
 *** dSPACE TargetLink Production Code Generator 5.1p2
 *** AS --- MBSD environment                     R2301-hotfix2
 *** AS --- DataDictionary structure level       5
 *** AS --- MBSD repository
 *** AS ---    sourcecode02.de.bosch.com/projects/MBSD/repos/mbsd/browse?at=537712056067caf70571199527af8b914a901532
 *** AS --- Train repository
 *** AS ---    sourcecode02.de.bosch.com/projects/ASMPAPP/repos/app-train/browse?at=7c6ea450cb8147c9e46507ef1e35a1d06c672957
\**************************************************************************************************/
/**************************************************************************************************\
 *** 
 *** Simulink model       : ActiveReturnCdp_sm
 *** TargetLink subsystem : ActiveReturnCdp_sm/ActiveReturnCdp
 *** Codefile             : IActiveReturnCdp_gg.h
 ***
 *** Generated by TargetLink, the dSPACE production quality code generator
 *** Generation date: 2023-05-11 19:12:29
 ***
 *** CODE GENERATOR OPTIONS:
 *** Code generation mode                     : Classic AUTOSAR
 *** AUTOSAR version                          : 4.3.0
 *** Compiler                                 : <unknown>
 *** Target                                   : Generic
 *** ANSI-C compatible code                   : yes
 *** Code Optimization                        : enabled
 *** Constant style                           : decimal
 *** Clean code option                        : enabled
 *** Logging mode                             : Do not log anything
 *** Code Coverage                            : disabled
 *** Generate empty conditional branches      : disabled
 *** Loop unroll threshold                    : 5
 *** Utilize bitwise shift operations         : AvoidPotentiallyUndefinedShiftsBasedOnWorstCaseRange
 s
 *** Handle unscaled SF expr. with TL type    : enabled
 *** Assignment of conditions                 : AllBooleanOutputs 
 *** Scope reduction only to function level   : disabled
 *** Exploit ranges if not erasable           : disabled
 *** Exploit Compute Through Overflow         : optimized
 *** Linker sections                          : enabled
 *** Enable Assembler                         : disabled
 *** Variable name length                     : unlimited
 *** Use global bitfields                     : disabled
 *** Stateflow: use of bitfields              : disabled
 *** State activity encoding limit            : 1
 *** Omit zero inits in restart function      : disabled
 *** Share functions between TL subsystems    : disabled
 *** Generate 64bit functions                 : enabled
 *** Inlining Threshold                       : 100
 *** Line break limit                         : 100
 *** Target optimized boolean data type       : enabled
 *** Keep saturation elements                 : disabled
 *** Extended variable sharing                : disabled
 *** Extended lifetime optimization           : enabled
 *** Style definition file                    : C:\Program Files\dSPACE TargetLink 5.1\Matlab\Tl\Con
 ***                                            fig\codegen\cconfig.xml
 *** Root style sheet                         : C:\Program Files\dSPACE TargetLink 5.1\Matlab\Tl\XML
 ***                                            \CodeGen\Stylesheets\TL_CSourceCodeSS.xsl
 ***
 *** TargetLink version      : 5.1p2 from 24-Jan-2022
 *** Code generator version  : Build Id 5.1.0.30 from 2022-01-24 15:16:38
\**************************************************************************************************/

#ifndef IACTIVERETURNCDP_GG_H
#define IACTIVERETURNCDP_GG_H

/*------------------------------------------------------------------------------------------------*\
  DEFINES (OPT)
\*------------------------------------------------------------------------------------------------*/
/*------------------------------------------------------------------------------------------------*\
  INCLUDES
\*------------------------------------------------------------------------------------------------*/

#include "Rte_Type.h"

/*------------------------------------------------------------------------------------------------*\
  ENUMS
\*------------------------------------------------------------------------------------------------*/
/*------------------------------------------------------------------------------------------------*\
  DEFINES
\*------------------------------------------------------------------------------------------------*/
/*------------------------------------------------------------------------------------------------*\
  TYPEDEFS
\*------------------------------------------------------------------------------------------------*/
/*------------------------------------------------------------------------------------------------*\
  VARIABLES
\*------------------------------------------------------------------------------------------------*/
/*------------------------------------------------------------------------------------------------*\
  PARAMETERIZED MACROS
\*------------------------------------------------------------------------------------------------*/
/*------------------------------------------------------------------------------------------------*\
  FUNCTION PROTOTYPES
\*------------------------------------------------------------------------------------------------*/

/* start of memory section 'CODE' */
#define ActiveReturnCdp_START_SEC_CODE
#include "ActiveReturnCdp_MemMap.h"
/**************************************************************************************************\
   ARRunnable4: Default function class for AUTOSAR runnables
\**************************************************************************************************/
FUNC(void, ActiveReturnCdp_CODE) ActRetCdp_ProvideFilterFactor(P2VAR(uint16, AUTOMATIC,
    RTE_APPL_DATA) FilFac_Val);

FUNC(void, ActiveReturnCdp_CODE) ActRetCdp_ProvideMaxMotorTorque(P2VAR(uint8, AUTOMATIC,
    RTE_APPL_DATA) MaxMotTrq_Val);

FUNC(void, ActiveReturnCdp_CODE) ActRetCdp_ProvideMaxMotorTorqueDepOnSteeringAngle(P2VAR(uint16,
    AUTOMATIC, RTE_APPL_DATA) MaxMotTrqDepOnSteerAng_Val, IDT_AbsSteerAng AbsSteerAng);

FUNC(void, ActiveReturnCdp_CODE) ActRetCdp_ProvideMaxMotorTorqueDepOnVehSpeed(P2VAR(uint16,
    AUTOMATIC, RTE_APPL_DATA) MaxMotTrqDepOnVehSpd_Val, IDT_AbsMaxSafeVehSpd AbsMaxSafeVehSpd);

FUNC(void, ActiveReturnCdp_CODE) ActRetCdp_ProvideMaxTBT4ShutDown(P2VAR(uint8, AUTOMATIC,
    RTE_APPL_DATA) MaxTBT4ShtDwn_Val);

FUNC(void, ActiveReturnCdp_CODE) ActRetCdp_ProvideMotorTorqueGain(P2VAR(uint16, AUTOMATIC,
    RTE_APPL_DATA) MotTrqGain_Val, IDT_AbsAvgVehSpd AbsAvgVehSpd);

FUNC(void, ActiveReturnCdp_CODE) ActRetCdp_ProvideNominalSteeringSpeed(P2VAR(uint16, AUTOMATIC,
    RTE_APPL_DATA) NomSteerSpd_Val, IDT_AbsAvgVehSpd AbsAvgVehSpd, IDT_AbsSteerAng AbsSteerAng);

FUNC(void, ActiveReturnCdp_CODE) ActRetCdp_ProvideRetTorqueFactDepOnDriver(P2VAR(uint16, AUTOMATIC,
    RTE_APPL_DATA) RetTrqFactDepOnDrvr_Val, IDT_AbsDrvrTrq AbsDrvrTrq, IDT_AbsAvgVehSpd
    AbsAvgVehSpd);

FUNC(void, ActiveReturnCdp_CODE) ActRetCdp_ProvideSteerSpeedFactDepOnDriver(P2VAR(uint16, AUTOMATIC,
    RTE_APPL_DATA) SteerSpdFactDepOnDrvr_Val, IDT_AbsDrvrTrq AbsDrvrTrq, IDT_AbsAvgVehSpd
    AbsAvgVehSpd);

FUNC(void, ActiveReturnCdp_CODE) ActRetCdp_ProvideSteerSpeedGradAfterInvalid(P2VAR(uint16,
    AUTOMATIC, RTE_APPL_DATA) SteerSpdGradAftInvld_Val);

FUNC(void, ActiveReturnCdp_CODE) ActRetCdp_ProvideSteeringSpeedAmp(P2VAR(uint16, AUTOMATIC,
    RTE_APPL_DATA) SteerSpdAmp_Val);

FUNC(void, ActiveReturnCdp_CODE) ActRetCdp_ProvideSteeringSpeedFact(P2VAR(uint8, AUTOMATIC,
    RTE_APPL_DATA) SteerSpdFact_Val);

FUNC(void, ActiveReturnCdp_CODE)
    ActiveReturnCdp_ActRetCdp_Prov_MaxMotTrqAftLoadFac(P2VAR(IDT_MaxMotTrqAftLoadFac, AUTOMATIC,
    RTE_APPL_DATA) MaxMotTrqAftLoadFac_Val);

/* end of memory section 'CODE' */
#define ActiveReturnCdp_STOP_SEC_CODE
#include "ActiveReturnCdp_MemMap.h"

#endif /* IACTIVERETURNCDP_GG_H */
/*------------------------------------------------------------------------------------------------*\
  END OF FILE
\*------------------------------------------------------------------------------------------------*/

